# -*- coding: utf-8 -*-
"""twitter_framework.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13ZqiX8mSdoffG84kVy7a1Lud35sow_zr
"""

# Command line to install tweepy
!pip install tweepy --upgrade

# Import tweepy
import tweepy 
import pandas as pd 

client = tweepy.Client(bearer_token='AAAAAAAAAAAAAAAAAAAAAO53gwEAAAAAPoMPpOJSqEgnv7b8EdCAFzZmZE8%3D0Ua3ow5kn5MlNC4Z8Y9Z9DhV7JmxBXAFkVkwDCbSnUcytouHkA')


# Set up search query, which searches for mentions of user @imVkohli and filters out the retweets 
query = "@imVkohli lang:en -is:retweet"

# Get response object of tweets. 
# NOTE: STILL NEED TO FIGURE OUT HOW THIS DATA STRUCTURE WORKS TO GET USERNAME AND OTHER DATA 
tweets = client.search_recent_tweets(query=query, tweet_fields=['context_annotations', 'created_at',"geo"], expansions=["author_id",'geo.place_id'], max_results=100, user_fields=['username'], place_fields=['place_type','geo'])

# FIGURE OUT WHAT THIS LINE DOES:
# Guess: Builds user list based on tweets already generated from response object 
users = {u["id"]: u for u in tweets.includes['users']}
places = {p['id']: p for p in tweets.includes['places']}


# Create empty lists for username and tweet text 
usernames = []
tweet_text = []
date_tweeted = []
geo_location = []
# For each tweet in tweet response object "data" property
for tweet in tweets.data:
  # If tweet author id belongs to the user list 
  # FIGURE OUT WHAT THIS DOES BELOW
  # if users[tweet.author_id]:
      # Set user variable equal to corresponding user_id and author_id pair 
      user = users[tweet.author_id]
      '''if places[tweet.geo['place_id']]:
        place = places[tweet.geo['place_id']]
        geo_location.append(place.full_name)'''
      # Append to lists to store data 
      usernames.append(user.username)
      tweet_text.append(tweet.text)
      date_tweeted.append(tweet.created_at)
      

# Create dictionary containing usernames and tweet text 
tweet_data_dict = {"Username" : usernames, "Tweet" : tweet_text, "Created_At" : date_tweeted}
# Based on dictionary create pandas dataframe 
tweet_data_df = pd.DataFrame(tweet_data_dict)

# Print out the dataframe 
print(tweet_data_df.head())
